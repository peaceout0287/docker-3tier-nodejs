version: '3.8'

services:
  # Web Tier (Nginx)
  web:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./web/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - app

  # Application Tier (Node.js + PM2)
  app:
    build: ./app
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=appuser
      - DB_PASSWORD=apppass
      - DB_NAME=mydb
      - REDIS_HOST=redis        # Redis connection
      - ELASTICSEARCH_HOST=es   # Elasticsearch connection
    networks:
      - app-network
      - db-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      es:
        condition: service_healthy

  # Database Tier (MySQL)
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=mydb
      - MYSQL_USER=appuser
      - MYSQL_PASSWORD=apppass
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uappuser", "-papppass"]
      interval: 5s
      timeout: 10s
      retries: 5

  # Redis Tier (Caching)
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass redispass  # Set password
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf  # Optional config
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispass", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Elasticsearch Tier (Search)
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # Adjust heap size
      - ELASTIC_PASSWORD=elasticpass    # Default user: elastic
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "-u", "elastic:elasticpass", "http://localhost:9200/_cluster/health?pretty"]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  mysql-data:
  redis-data:
  es-data:

networks:
  app-network:
  db-network:
    internal: true
